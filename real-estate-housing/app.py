from shiny import App, render, ui
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from pathlib import Path

# Ref: https://shinylive.io/py/app/#code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxM6lACZw6EgK4cAOhD4ChTVFAjSoLJvq3TV6wcJZwoAI0ERDBlhBan+5pgHcodNRADmLhD0jFpQZGwANhzWvG6aAAphbKqqTiwYlmQA+uFw8AAUAJQpEBGkflnWUnDSBgC8xhhSUNJZhCwAbvmJ4flZWTQcEXD9hVjelMIA9EzKYNLEFWR0UBxkLFll-hjtHXPFEKrEqGQcpBvLq+tMDVsVVXA1LMBzl2tzALoYCmoAjgpwIoYMjEKIsMhFI4nM7OSrVWo3Jh3OGPWovMAPGqfb5-AFAkFgiEHVRoVBZJSIpTjPwjGgRJTSfKqJgsphUrioBTZSzDQinABegNeKzWLnwszAABURes5hJjqdzjkZSwJDAFBFTqhhnVpQDCnhmaz2RBOdy4LyBUKMfCxRI5gAhW1ypgKmEbTG1NUarU6vVwA1GllU4hcs1ZbXECFzazeQhsbxkfaGiDEw66OA0VhyDpyfIcrnysOF7MsFgwwqIINMAACobIZurNakGboWDKSfsrNkWdjdHjiaKVa7rNZAGImBAo3AmOEwrxTVzgSqipJM3IDCDZ2wZ29rjy4HyakwOhwoNuZwBVACS1dHXGkAA9lVdEcjPc9hVdsRxyxB84uZDLlcLBFAco73roz6em+5Qok86Kej+f4AWaGAfmBJQQeOrAKNYmRMHoZDnluADWjyoK6pQ8AeR7SLOKqGLoTAfnerIsHhWTSFmtxwR+wAPs+e5MAAZAuT7wdIHxYdhnhrGwnjeL4AQ7GE8ZZF4PhcAEQ5sdhmnKek5b8MMgyanmcwcH4U5SPsekQROHhwAA5BEETZsI57SAoMAwDwHRQPSM40IITCPhIOj0QolhMGwAILheLFxgmQgYPZo4cdYXE0Oi3m+dgnyIgAjDJ2ETpGwhEVA9l+IiaSqQ2HZMiOskslVdSZdlKataOpEPnUMbeHK6WstgA1gCspz+MNLWtY+415X5M09aycVwONe7LStTAkBE41IfgI0srtGkrKgdQACzdbJaatROUgwMQuZIjYFoGKQYUALRQI+v4SB4nDxrw732LkSJwDSzE6NgXgFbNrJ+BkcDZI+ESvREoFzHZ8MsojmRZI+pyEKRaPWG9TJgNjrV48jORrMMoEnRQJlhOtcwgCd0DwAAvtj9lSGQCg+EwfglCS6CImIqD5KS5IcBIlh0LmdAHGA3N4OAXMIMgCxLCqmzlDsnT4EQpAUFQyCenge54JN2mqAASsjdAcHAyssAABfkAAyNgrAsKt4CINA0IeirQBQTAAOryUwABisBDNgeAAKyqHHLbxh7DoahEuuqsHod8jCrPR7HCcwEnqeqAA4nIMA6B7ADKO6oDudDSB7AAiiwFyHYcl5HMfhPHicRMnacQE7yyu+7Xs16CsipkH-fF6QpfDwpFdV5POdufnK9F+HG-l2PycXao8TEMQ0gM4fA-r0Pp+V+P1cQA6Vh+HfhcPxHM6b6PF+ycADMjsoxkCckMDc9815-zLiPber9J7Txdm7DcXtfZVBaIIA0C8b7wIUgATVDP4JgABhTgecWxvwzpQLOe8869zwHg+iADiE-FqhQoY0hqGTzrnQBuEBm6t3bp3HuARmHX1YbHdhpCuFUMoG-FBs90H5AXnnSguCpEEKYLIzhlCeGKN3rnA+LCdF6PIQY6hoCIBXxvnfMxbCSH6O4bw1QH8oBfzgKqRxMjnGWNcUYsBZAIFwCgXQHx2inEcICQoiAeAbHKLQREjBftsGB18SPAA8rkOgTBxGqknrQiA9CTFMMyQpHJ7d8lMIvhAfhgjhFwDbnIMR5SomxyqXIGpEjEnOxUSktRi9NGSPwQArpeSClvwYaYjp2Tck9NVDYuxt9vGjOkfM6pUybEeK8ZEsZnSFlTOQeAyBwwInrJ0RMxZCTHb9OSZ7H2aSA4GhbjUaQ2kmDezQREPAdTimlP3kwt50gPmkO+bmX5NiGmNzeS0ju3dgU7lBZ8iFFo-l3Jng8+ewzl4grBbVNFvy6kzKRe81FPzbm2KkXffFFLIV4BKu-T+tLkUEq+ZSxJpywnnNVHS8FnLMWoLnk8rBLy8BkOIPOGuDBGCfNof8OhycABM6dM5sGzmUiRkrpWysrqQhVAISnJyZTCoRcLRGIu1VK4QMrr76tqoapVeBVVT3uSK9RS8DQ6ttXq+VUhFXGpde4rVqofVMDtXKg1AajWEBAZfGlazw2RodfHGNzqSUsqTTaiNfro1wEDXG4NU9uXhLDTmlN-qC2xpNUKgZjzMH+xwXgLusqogCoZa6gFGrSUSNbdfdthLBX1PrrCkRrSrWqn7aCel6LXVJI9big007B0cs7SGoFfa22zqhQm+xayV07sZe4rNU7t0dvRUyh2pbeUtvPUOhlfSsUisbekg0WTUCUAgN4gwkpiBMCbpcfw0Cinqs1Zu1UH6v0-qYH+gDQGaQXL4aO8146EVTKgxAb9ZZYP-sAysYDFyn3CtUZ6kZmHsO-rwwhkDG7GESIozBuD+GdCIdVHUlZd9GM4eYzRpDJ7PFcc-Vhpj1GCNsapdekJZzoHcao-B8T0DiP1tSWK5t8Q0bYBoBqSja70WgboT20NeANNQC0zpmDRK35mqafCtpEjTPmYiLpqzdSF2kaXSZzT2nnOWcpSS4zjmfMuf83u1ZqogsWZw1Z3ep6vNmeC35hlbmb3QMi756LoW3XPtUa+8VUc1JsF1lMeIDAKDF2egAOTCELOAVLu3gfo6qArZB4zFdK9OCrM5quCykFSmzFqJ1TJa21xYJWysDyqzVvryD3UeY0cvEbRWxsdfK6cKbvW6s7OM0t9rE2utMB67VqlnG1m7ZW-t9b3Xpt1di4Js7hW9udau4dm7xapOhLLXgc7fhxvPY4Bt47s2cuDLy82kQegTg2CGGsHgMW1WGcawfCHaBiLWBh2QOHlLkMCLHc0y1UyUdQ-R1ETHenfnA5I4Msjy8ido4x1jhlxiINB0h-T0njP0XLMTQXNn0OOfk4xcy+7vPUf89h4LlL0meXQLp+Lsnrm63YtFU2wO0pVjQBJxL+HEAGu9tVOrrg8vOfEtrih2zBOmGG81wzwXlOVNDIWwaa3xu7d0YPi7rXCusunYNyKG3Aude7Lvp723VmuXS6+6HwP2Olcvuec2gAot+ugfgTc0LA-rvAye5Bp8F9C83g30NMJz6n9P9vlc04NKXvP4f3cl5T7X4dvvs+N-T5mkXrfc-t+CZ929Nf0-KeV2DwODpvB9Qvbu3XmfjNj7oBPh9l6ze49Q-jobTC58L-z3H+bXq8Cb6PUyrPB-J-Fpbyfxfpvhd7P3+Po9Uu+-QIv4Lq9c3QcJ8DgAWUmIFeDfANRhAwiHaojsYI4lJGYs7f7kC-6Ab-5ozhzAFPD9aF5ob2aqhQHETuSwHqjwFAGVYgFKJv6PJV54AYEwGnA4GAEfT4FIEBaQE-5YEUEAEIE0Fejc77roEMF-6UEsEEF3Y35kGMFwFUH2CsGgElqR63qCHcHMF4F8GqBqwfBAA

sns.set_theme()

re_list = pd.read_csv(Path(__file__).parent / "ma_realtor_data.csv")

re_list["sold_date"] = re_list["sold_date"].astype('datetime64[ns]')
re_list["sold_year"] = re_list["sold_date"].dt.year


med_series = re_list.groupby(["zip_code", "sold_year"], as_index=False)["price"].median()
df = pd.DataFrame(med_series)

app_ui = ui.page_fluid(
    ui.input_slider("year", "Year", min=2010, max=2021, value=2010),
    ui.output_table("result"),
)

def server(input, output):
    @output
    @render.table
    def result():
        sub_df = df[(df["sold_year"] == input.year())]

        return sub_df


app = App(app_ui, server)